name: Verify PullRequest
on:
  pull_request:
    branches:
      - 'main'
env:
  GCP_PROJECT_ID_DEVOPS: ${{ secrets.GCP_PROJECT_ID_DEVOPS }}
  GCP_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID_DEVOPS }}/delivery-api:${{  github.sha }}
  GCP_SA_KEY_DEVOPS: ${{ secrets.GCP_SA_KEY_DEVOPS }}
  TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID_DEVOPS }}
  TF_VAR_gcp_project_image: gcr.io/${{ secrets.GCP_PROJECT_ID_DEVOPS }}/delivery-api:${{  github.sha }}
  TF_VAR_gcp_key_file: ${{ secrets.GCP_SA_KEY_DEVOPS }}
  TF_VAR_service_name: delivery-api
  TF_VAR_gcp_region: us-east4
  TF_VAR_gcp_zone: us-east4-a
  TF_VAR_domain_service: api.delivery.projects.themark.dev
  TF_VAR_NODE_ENV: production
  TF_VAR_ENV_DATABASE_URL: ${{ secrets.ENV_DATABASE_URL }}
  TF_VAR_ENV_TOKEN_CLIENT_JWT: ${{ secrets.ENV_TOKEN_CLIENT_JWT }}
  TF_VAR_ENV_TOKEN_DELIVERYMAN_JWT: ${{ secrets.ENV_TOKEN_DELIVERYMAN_JWT }}
  TF_VAR_ENV_NEW_RELIC_TOKEN: ${{ secrets.ENV_NEW_RELIC_TOKEN }}

jobs:
  verify:
    name: 'Verify Plan - Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.GCP_PROJECT_ID_DEVOPS }}
        service_account_key: ${{ env.GCP_SA_KEY_DEVOPS }}
        export_default_credentials: true

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="prefix=terraform/${{ env.TF_VAR_NODE_ENV }}/api-service/api-rest"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
